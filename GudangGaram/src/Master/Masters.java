/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Master;

import LSubProces.DRunSelctOne;
import LSubProces.Insert;
import LSubProces.Update;
import Proses.*;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author richky
 */
public class Masters extends javax.swing.JFrame {

    /**
     * Creates new form Masters
     */
    String IdEdit, Title;

    public Masters(Object idEdit, String title) {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        IdEdit = idEdit.toString();
        Title = title;
        JLNama.setText("Nama " + Title);
        if (Title.equals("Pemasok Lain")) {
            JLNama.setText("Nama Pemasok");
        }
        if (IdEdit.equals("0")) {
            setTitle("Tambah " + Title);
            JBUbah.setVisible(false);
        } else {
            setTitle("Ubah " + Title);
            loadData();
            JBTambah.setVisible(false);
            JBTambahTutup.setVisible(false);
        }
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLNama = new KomponenGUI.JlableF();
        JLNama2 = new KomponenGUI.JlableF();
        JTNama = new KomponenGUI.JtextF();
        JLKeterangan = new KomponenGUI.JlableF();
        JLKeterangan2 = new KomponenGUI.JlableF();
        JSPKeterangan = new javax.swing.JScrollPane();
        JTKeterangan = new KomponenGUI.JTextAreaF();
        JBKembali = new KomponenGUI.JbuttonF();
        JBTambah = new KomponenGUI.JbuttonF();
        JBTambahTutup = new KomponenGUI.JbuttonF();
        JBUbah = new KomponenGUI.JbuttonF();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        JLNama.setText("Nama Penerima");

        JLNama2.setText(":");

        JTNama.setMaxText(50);
        JTNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTNamaKeyReleased(evt);
            }
        });

        JLKeterangan.setText("Keterangan");

        JLKeterangan2.setText(":");

        JTKeterangan.setColumns(20);
        JTKeterangan.setRows(5);
        JTKeterangan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTKeteranganKeyPressed(evt);
            }
        });
        JSPKeterangan.setViewportView(JTKeterangan);

        JBKembali.setText("Kembali");
        JBKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBKembaliActionPerformed(evt);
            }
        });

        JBTambah.setText("Tambah");
        JBTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTambahActionPerformed(evt);
            }
        });

        JBTambahTutup.setText("Tambah & Tutup");
        JBTambahTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTambahTutupActionPerformed(evt);
            }
        });

        JBUbah.setText("Ubah");
        JBUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBUbahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JLNama, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JLNama2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTNama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JLKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JLKeterangan2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JSPKeterangan))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(JBKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(JBTambah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBTambahTutup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBUbah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLNama2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JLKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(JLKeterangan2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JSPKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBUbah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBTambahTutup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBTambah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTambahActionPerformed
        tambah(false);
    }//GEN-LAST:event_JBTambahActionPerformed

    private void JBTambahTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTambahTutupActionPerformed
        tambah(true);
    }//GEN-LAST:event_JBTambahTutupActionPerformed

    private void JBUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBUbahActionPerformed
        ubah();
    }//GEN-LAST:event_JBUbahActionPerformed

    private void JBKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBKembaliActionPerformed
        dispose();
    }//GEN-LAST:event_JBKembaliActionPerformed

    private void JTKeteranganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTKeteranganKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (JBTambah.isVisible()) {
                tambah(false);
            } else {
                ubah();
            }
        }
    }//GEN-LAST:event_JTKeteranganKeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (JBTambah.isVisible()) {
            switch (Title) {
                case "Gudang":
                    GlobalVar.Var.tambahGudang = null;
                    break;
                case "Pemasok":
                    GlobalVar.Var.tambahPemasok = null;
                    break;
                case "Pemasok Lain":
                    GlobalVar.Var.tambahPemasokLain = null;
                    break;
                case "Peminta":
                    GlobalVar.Var.tambahPeminta = null;
                    break;
                case "Penerima":
                    GlobalVar.Var.tambahPenerima = null;
                    break;
                case "Jenis Karyawan":
                    GlobalVar.Var.tambahJenisKaryawan = null;
                    break;
                case "Jenis Barang":
                    GlobalVar.Var.tambahJenisBarang = null;
                    break;
                case "Jenis Penjualan":
                    GlobalVar.Var.tambahJenisPenjualan = null;
                    break;
                default:
                    break;
            }
        } else {
            switch (Title) {
                case "Gudang":
                    GlobalVar.Var.ubahGudang = null;
                    break;
                case "Pemasok":
                    GlobalVar.Var.ubahPemasok = null;
                    break;
                case "Pemasok Lain":
                    GlobalVar.Var.ubahPemasokLain = null;
                    break;
                case "Peminta":
                    GlobalVar.Var.ubahPeminta = null;
                    break;
                case "Penerima":
                    GlobalVar.Var.ubahPenerima = null;
                    break;
                case "Jenis Karyawan":
                    GlobalVar.Var.ubahJenisKaryawan = null;
                    break;
                case "Jenis Barang":
                    GlobalVar.Var.ubahJenisBarang = null;
                    break;
                case "Jenis Penjualan":
                    GlobalVar.Var.ubahJenisPenjualan = null;
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_formWindowClosed

    private void JTNamaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTNamaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            JTKeterangan.requestFocus();
        }
    }//GEN-LAST:event_JTNamaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Masters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Masters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Masters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Masters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Masters("0", "");
            }
        });
    }

    boolean checkInput() {
        if (JTNama.getText().replace(" ", "").isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama " + Title + " Tidak Boleh Kosong", "Information", JOptionPane.INFORMATION_MESSAGE);
            JTNama.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    void tambah(boolean tutup) {
        if (checkInput()) {
            Insert insert = new LSubProces.Insert();
            boolean simpan = false;
            switch (Title) {
                case "Gudang":
                    simpan = insert.simpan("INSERT INTO `tbmgudang`(`Gudang`, `Keterangan`) VALUES ('" + JTNama.getText() + "', '" + JTKeterangan.getText() + "')", Title, this);
                    break;
                case "Pemasok":
                    simpan = insert.simpan("INSERT INTO `tbmpemasok`(`Pemasok`, `Keterangan`) VALUES ('" + JTNama.getText() + "', '" + JTKeterangan.getText() + "')", Title, this);
                    break;
                case "Pemasok Lain":
                    simpan = insert.simpan("INSERT INTO `tbmpemasoklain`(`PemasokLain`, `Keterangan`) VALUES ('" + JTNama.getText() + "', '" + JTKeterangan.getText() + "')", Title, this);
                    break;
                case "Peminta":
                    simpan = insert.simpan("INSERT INTO `tbmpeminta`(`Peminta`, `Keterangan`) VALUES ('" + JTNama.getText() + "', '" + JTKeterangan.getText() + "')", Title, this);
                    break;
                case "Penerima":
                    simpan = insert.simpan("INSERT INTO `tbmpenerima`(`Penerima`, `Keterangan`) VALUES ('" + JTNama.getText() + "', '" + JTKeterangan.getText() + "')", Title, this);
                    break;
                case "Jenis Karyawan":
                    simpan = insert.simpan("INSERT INTO `tbsmjeniskaryawan`(`JenisKaryawan`, `Keterangan`) VALUES ('" + JTNama.getText() + "', '" + JTKeterangan.getText() + "')", Title, this);
                    break;
                case "Jenis Barang":
                    simpan = insert.simpan("INSERT INTO `tbsmjenisbarang`(`JenisBarang`, `Keterangan`) VALUES ('" + JTNama.getText() + "', '" + JTKeterangan.getText() + "')", Title, this);
                    break;
                case "Jenis Penjualan":
                    simpan = insert.simpan("INSERT INTO `tbsmjenispenjualan`(`JenisPenjualan`, `Keterangan`) VALUES ('" + JTNama.getText() + "', '" + JTKeterangan.getText() + "')", Title, this);
                    break;
                default:
                    break;
            }
            if (simpan) {
                switch (Title) {
                    case "Gudang":
                        if (GlobalVar.Var.listGudang != null) {
                            GlobalVar.Var.listGudang.refresh();
                        }
                        if (GlobalVar.Var.tambahPenjualan != null || GlobalVar.Var.ubahPenjualan != null) {
                            Penjualan.JCTujuan.load("SELECT `Gudang` FROM `tbmgudang`");
                            Penjualan.JCTujuan.setSelectedItem(JTNama.getText());
                            Penjualan.JCTujuan.requestFocus();
                        }
                        break;
                    case "Pemasok":
                        if (GlobalVar.Var.listPemasok != null) {
                            GlobalVar.Var.listPemasok.refresh();
                        }
                        if (GlobalVar.Var.tambahBarang != null || GlobalVar.Var.ubahBarang != null) {
                            MasterBarang.JCPemasok.load("SELECT `Pemasok` FROM `tbmpemasok`");
                            MasterBarang.JCPemasok.setSelectedItem(JTNama.getText());
                            MasterBarang.JCPemasok.requestFocus();
                        }
                        break;
                    case "Pemasok Lain":
                        if (GlobalVar.Var.listPemasokLain != null) {
                            GlobalVar.Var.listPemasokLain.refresh();
                        }
                        if (GlobalVar.Var.tambahPenerimaanLain != null || GlobalVar.Var.ubahPenerimaanLain != null) {
                            PenerimaanLain.JCPemasok.load("SELECT `PemasokLain` FROM `tbmpemasoklain`");
                            PenerimaanLain.JCPemasok.setSelectedItem(JTNama.getText());
                            PenerimaanLain.JCPemasok.requestFocus();
                        }
                        break;
                    case "Peminta":
                        if (GlobalVar.Var.listPeminta != null) {
                            GlobalVar.Var.listPeminta.refresh();
                        }
                        if (GlobalVar.Var.tambahPenerimaan != null || GlobalVar.Var.ubahPenerimaan != null) {
                            Penerimaan.JCPeminta.load("SELECT `Peminta` FROM `tbmpeminta`");
                            Penerimaan.JCPeminta.setSelectedItem(JTNama.getText());
                            Penerimaan.JCPeminta.requestFocus();
                        }
                        break;
                    case "Penerima":
                        if (GlobalVar.Var.listPenerima != null) {
                            GlobalVar.Var.listPenerima.refresh();
                        }
                        if (GlobalVar.Var.tambahPenjualan != null || GlobalVar.Var.ubahPenjualan != null) {
                            Penjualan.JCTujuan.load("SELECT `Penerima` FROM `tbmpenerima`");
                            Penjualan.JCTujuan.setSelectedItem(JTNama.getText());
                            Penjualan.JCTujuan.requestFocus();
                        }
                        break;
                    case "Jenis Karyawan":
                        if (GlobalVar.Var.listJenisKaryawan != null) {
                            GlobalVar.Var.listJenisKaryawan.refresh();
                        }
                        if (GlobalVar.Var.tambahKaryawan != null || GlobalVar.Var.ubahKaryawan != null) {
                            MasterKaryawan.jcomboboxF1.load("SELECT `JenisKaryawan` FROM `tbsmjeniskaryawan`");
                            MasterKaryawan.jcomboboxF1.setSelectedItem(JTNama.getText());
                            MasterKaryawan.jcomboboxF1.requestFocus();
                        }
                        break;
                    case "Jenis Barang":
                        if (GlobalVar.Var.listJenisBarang != null) {
                            GlobalVar.Var.listJenisBarang.refresh();
                        }
                        if (GlobalVar.Var.tambahBarang != null || GlobalVar.Var.ubahBarang != null) {
                            MasterBarang.JCJenisBarang.load("SELECT `JenisBarang` FROM `tbsmjenisbarang`");
                            MasterBarang.JCJenisBarang.setSelectedItem(JTNama.getText());
                            MasterBarang.JCJenisBarang.requestFocus();
                        }
                        break;
                    case "Jenis Penjualan":
                        if (GlobalVar.Var.listJenisPenjualan != null) {
                            GlobalVar.Var.listJenisPenjualan.refresh();
                        }
                        if (GlobalVar.Var.tambahPenjualan != null || GlobalVar.Var.ubahPenjualan != null) {
                            Penjualan.JCJenisPenjualan.load("SELECT `JenisPenjualan` FROM `tbsmjenispenjualan`");
                            Penjualan.JCJenisPenjualan.setSelectedItem(JTNama.getText());
                            Penjualan.JCJenisPenjualan.requestFocus();
                        }
                        break;
                    default:
                        break;
                }
                if (tutup) {
                    dispose();
                } else {
                    clearText();
                    JTNama.requestFocus();
                }
            }
        }
    }

    void clearText() {
        JTNama.setText("");
        JTKeterangan.setText("");
    }

    void loadData() {
        DRunSelctOne dRunSelctOne = new DRunSelctOne();
        dRunSelctOne.seterorm("Gagal Menampilkan Data " + Title);
        switch (Title) {
            case "Gudang":
                dRunSelctOne.setQuery("SELECT `IdGudang`, `Gudang`, `Keterangan` FROM `tbmgudang` WHERE `IdGudang`='" + IdEdit + "'");
                break;
            case "Pemasok":
                dRunSelctOne.setQuery("SELECT `IdPemasok`, `Pemasok`, `Keterangan` FROM `tbmpemasok` WHERE `IdPemasok`='" + IdEdit + "'");
                break;
            case "Pemasok Lain":
                dRunSelctOne.setQuery("SELECT `IdPemasokLain`, `PemasokLain`, `Keterangan` FROM `tbmpemasoklain` WHERE `IdPemasokLain`='" + IdEdit + "'");
                break;
            case "Peminta":
                dRunSelctOne.setQuery("SELECT `IdPeminta`, `Peminta`, `Keterangan` FROM `tbmpeminta` WHERE `IdPeminta`='" + IdEdit + "'");
                break;
            case "Penerima":
                dRunSelctOne.setQuery("SELECT `IdPenerima`, `Penerima`, `Keterangan` FROM `tbmpenerima` WHERE `IdPenerima`='" + IdEdit + "'");
                break;
            case "Jenis Karyawan":
                dRunSelctOne.setQuery("SELECT `IdJenisKaryawan`, `JenisKaryawan`, `Keterangan` FROM `tbsmjeniskaryawan` WHERE `IdJenisKaryawan`='" + IdEdit + "'");
                break;
            case "Jenis Barang":
                dRunSelctOne.setQuery("SELECT `IdJenisBarang`, `JenisBarang`, `Keterangan` FROM `tbsmjenisbarang` WHERE `IdJenisBarang`='" + IdEdit + "'");
                break;
            case "Jenis Penjualan":
                dRunSelctOne.setQuery("SELECT `IdJenisPenjualan`, `JenisPenjualan`, `Keterangan` FROM `tbsmjenispenjualan` WHERE `IdJenisPenjualan`='" + IdEdit + "'");
                break;
            default:
                break;
        }
        ArrayList<String> list = dRunSelctOne.excute();
        JTNama.setText(list.get(1));
        JTKeterangan.setText(list.get(2));
    }

    void ubah() {
        if (checkInput()) {
            Update update = new LSubProces.Update();
            boolean ubah = false;
            switch (Title) {
                case "Gudang":
                    ubah = update.Ubah("UPDATE `tbmgudang` SET `Gudang`='" + JTNama.getText() + "', `Keterangan`='" + JTKeterangan.getText() + "' WHERE `IdGudang`=" + IdEdit, Title, this);
                    break;
                case "Pemasok":
                    ubah = update.Ubah("UPDATE `tbmpemasok` SET `Pemasok`='" + JTNama.getText() + "', `Keterangan`='" + JTKeterangan.getText() + "' WHERE `IdPemasok`=" + IdEdit, Title, this);
                    break;
                case "Pemasok Lain":
                    ubah = update.Ubah("UPDATE `tbmpemasoklain` SET `PemasokLain`='" + JTNama.getText() + "', `Keterangan`='" + JTKeterangan.getText() + "' WHERE `IdPemasokLain`=" + IdEdit, Title, this);
                    break;
                case "Peminta":
                    ubah = update.Ubah("UPDATE `tbmpeminta` SET `Peminta`='" + JTNama.getText() + "', `Keterangan`='" + JTKeterangan.getText() + "' WHERE `IdPeminta`=" + IdEdit, Title, this);
                    break;
                case "Penerima":
                    ubah = update.Ubah("UPDATE `tbmpenerima` SET `Penerima`='" + JTNama.getText() + "', `Keterangan`='" + JTKeterangan.getText() + "' WHERE `IdPenerima`=" + IdEdit, Title, this);
                    break;
                case "Jenis Karyawan":
                    ubah = update.Ubah("UPDATE `tbsmjeniskaryawan` SET `JenisKaryawan`='" + JTNama.getText() + "', `Keterangan`='" + JTKeterangan.getText() + "' WHERE `IdJenisKaryawan`=" + IdEdit, Title, this);
                    break;
                case "Jenis Barang":
                    ubah = update.Ubah("UPDATE `tbsmjenisbarang` SET `JenisBarang`='" + JTNama.getText() + "', `Keterangan`='" + JTKeterangan.getText() + "' WHERE `IdJenisBarang`=" + IdEdit, Title, this);
                    break;
                case "Jenis Penjualan":
                    ubah = update.Ubah("UPDATE `tbsmjenispenjualan` SET `JenisPenjualan`='" + JTNama.getText() + "', `Keterangan`='" + JTKeterangan.getText() + "' WHERE `IdJenisPenjualan`=" + IdEdit, Title, this);
                    break;
                default:
                    break;
            }
            if (ubah) {
                dispose();
                switch (Title) {
                    case "Gudang":
                        GlobalVar.Var.listGudang.refresh();
                        break;
                    case "Pemasok":
                        GlobalVar.Var.listPemasok.refresh();
                        break;
                    case "Pemasok Lain":
                        GlobalVar.Var.listPemasokLain.refresh();
                        break;
                    case "Peminta":
                        GlobalVar.Var.listPeminta.refresh();
                        break;
                    case "Penerima":
                        GlobalVar.Var.listPenerima.refresh();
                        break;
                    case "Jenis Karyawan":
                        GlobalVar.Var.listJenisKaryawan.refresh();
                        break;
                    case "Jenis Barang":
                        GlobalVar.Var.listJenisBarang.refresh();
                        break;
                    case "Jenis Penjualan":
                        GlobalVar.Var.listJenisPenjualan.refresh();
                        break;
                    default:
                        break;
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private KomponenGUI.JbuttonF JBKembali;
    private KomponenGUI.JbuttonF JBTambah;
    private KomponenGUI.JbuttonF JBTambahTutup;
    private KomponenGUI.JbuttonF JBUbah;
    private KomponenGUI.JlableF JLKeterangan;
    private KomponenGUI.JlableF JLKeterangan2;
    private KomponenGUI.JlableF JLNama;
    private KomponenGUI.JlableF JLNama2;
    private javax.swing.JScrollPane JSPKeterangan;
    private KomponenGUI.JTextAreaF JTKeterangan;
    private KomponenGUI.JtextF JTNama;
    // End of variables declaration//GEN-END:variables
}
